@page "/CrawlerInterface"
@using Application.Common.Interfaces
@*@using Domain.Dtos;*@
@using Microsoft.AspNetCore.SignalR.Client
@using Application.Common.Models.SignalR
@inject HttpClient httpClient;
@inject IJSRuntime JSRuntime;




<h3 id="Header">Crawler Interface</h3>

<button class="btn btn-warning btn-lg" id="plus" @onclick="ShowModal">Order Add</button>

@if (showModal)
{
    <div class="modal show d-block" tabindex="-1" role="dialog" style="pointer-events:auto">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Order Request</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    @*Dropdown selector*@
                    <p style="text-align:left">Which kind of product are you looking for</p>
                    <InputSelect class="form-select form-select-sm mb-3" @bind-Value="selectedOption">
                        <option value="0">All</option>
                        <option value="1">Discount</option>
                        <option value="2">Non discount</option>
                    </InputSelect>
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault" @onclick="ToggleInput">
                        <label class="form-check-label" style="text-align:left" for="flexSwitchCheckDefault">For spesific amount.</label>
                    </div>
                    @if (showInput)
                    {
                        <input type="number" class="form-control" @oninput="UpdateCustomAmount" value="@customAmount" />
                    }

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal" @onclick="@(()=>SendDataToConsole(customAmount,selectedOption))">Create Order</button>

                </div>
            </div>
        </div>
    </div>
}




<div class="fakeMenu">
    <div class="fakeButtons fakeClose"></div>
    <div class="fakeButtons fakeMinimize"></div>
    <div class="fakeButtons fakeZoom"></div>
</div>
<div class="fakeScreen">
    @foreach (var log in logs)
    {
        <p class="line1">@log.Message <span>@log.SendOn.ToString("g")</span><span style="float:right">Yazınız</span></p>
    }

</div>



@code {
    private List<UserLogDto> logs = new List<UserLogDto>();
    private HubConnection? hubConnection;
    private HubConnection? dataTransferHubConnection;
    private int selectedOption;

    protected override async Task OnInitializedAsync()
    {

        var hubConnection = new HubConnectionBuilder()
        .WithUrl($"https://localhost:7090/Hubs/UserLogHub")
        .WithAutomaticReconnect()
        .Build();
        hubConnection.On<UserLogDto>("NewUserLogAdded", (UserLogDto) =>
        {
            logs.Add(UserLogDto);
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();


        await base.OnInitializedAsync();
    }


    private bool showModal = false;

    private void ShowModal()
    {
        showModal = true;
        JSRuntime.InvokeVoidAsync("showModal");  //JavaScript metodunu çağırarak modalı açın
    }

    private void CloseModal()
    {
        showModal = false;
        JSRuntime.InvokeVoidAsync("hideModal"); // JavaScript metodunu çağırarak modalı kapatın
    }


    private string menuDisplay = "none";

    private void ShowMenu()
    {
        if (menuDisplay == "none")
            menuDisplay = "block";
        else
            menuDisplay = "none";
    }

    bool showInput = false;
    int customAmount;

    void ToggleInput()
    {
        showInput = !showInput;

    }

    void UpdateCustomAmount(ChangeEventArgs e)
    {
        string inputValue = e.Value.ToString();
        if (string.IsNullOrEmpty(inputValue))
        {
            customAmount = -1;
        }
        if (int.TryParse(inputValue, out int result))
        {
            customAmount = result;
        }
        else
        {
            customAmount = -1;
        }
    }

    private async Task SendDataToConsole(int customAmount, int selectedOption)
    {

        Console.WriteLine("Data transfer hub başladı", customAmount,selectedOption);
        Console.WriteLine(customAmount);
        Console.WriteLine(selectedOption);
        var dataTransferHubConnection = new HubConnectionBuilder()
        .WithUrl($"https://localhost:7090/Hubs/DataTransferHub")
        .WithAutomaticReconnect()
        .Build();

        await dataTransferHubConnection.StartAsync();

        await dataTransferHubConnection.InvokeAsync("SendDataToConsole", customAmount, selectedOption);

        
    }

    


}

<style>
    /* body {
        background-color: #F1D4E5;
        padding:10px;
        
    } */

    #Header{
        font-family:Verdana, Geneva, Tahoma, sans-serif;
        text-align: center;
    }
    
    #plus{
        border-radius:5px 20px;
        /*margin-top: 10px;
        margin-bottom: 10px;*/
        margin: 20px 45%;
        
    }
    #plus:hover{
        color:white;
        background-color: #32CD32;
        box-shadow:1px 1px 6px  #FFFFFF;
        
    }

    .fakeButtons {
        height: 10px;
        width: 10px;
        border-radius: 50%;
        border: 1px solid #000;
        position: relative;
        top: 6px;
        left: 6px;
        background-color: #ff3b47;
        border-color: #9d252b;
        display: inline-block;
    }

    .fakeMinimize {
        left: 11px;
        background-color: #ffc100;
        border-color: #9d802c;
    }

    .fakeZoom {
        left: 16px;
        background-color: #00d742;
        border-color: #049931;
    }

    .fakeMenu {
        width: 75%;
        box-sizing: border-box;
        height: 25px;
        background-color: #bbb;
        margin: 0 auto;
        border-top-right-radius: 5px;
        border-top-left-radius: 5px;
    }

    .fakeScreen {
        background-color: #16213E;
        box-sizing: border-box;
        width: 75%;
        height:550px;
        margin: 0 auto;
        padding: 20px;
        opacity: 0.8;
        border-bottom-left-radius: 5px;
        border-bottom-right-radius: 5px;
    }

    p.line1 {
        position: static;
        /*left: 50%;*/
        /*margin-left: -8.5em;*/
        text-align: left;
        font-size: 1.25em;
        font-family: monospace;
        white-space: nowrap;
        overflow: hidden;
        width: 0;
    }

    span {
        color: #fff;
        font-weight: bold;
    }

    .line1 {
        color: #16FF00;
        -webkit-animation: type .5s 1s steps(20, end) forwards;
        -moz-animation: type .5s 1s steps(20, end) forwards;
        -o-animation: type .5s 1s steps(20, end) forwards;
        animation: type .5s 1s steps(20, end) forwards;
    }

    .cursor1 {
        -webkit-animation: blink 1s 2s 2 forwards;
        -moz-animation: blink 1s 2s 2 forwards;
        -o-animation: blink 1s 2s 2 forwards;
        animation: blink 1s 2s 2 forwards;
    }

    .line2 {
        color: #CDEE69;
        -webkit-animation: type .5s 4.25s steps(20, end) forwards;
        -moz-animation: type .5s 4.25s steps(20, end) forwards;
        -o-animation: type .5s 4.25s steps(20, end) forwards;
        animation: type .5s 4.25s steps(20, end) forwards;
    }

    .cursor2 {
        -webkit-animation: blink 1s 5.25s 2 forwards;
        -moz-animation: blink 1s 5.25s 2 forwards;
        -o-animation: blink 1s 5.25s 2 forwards;
        animation: blink 1s 5.25s 2 forwards;
    }

    .line3 {
        color: #E09690;
        -webkit-animation: type .5s 7.5s steps(20, end) forwards;
        -moz-animation: type .5s 7.5s steps(20, end) forwards;
        -o-animation: type .5s 7.5s steps(20, end) forwards;
        animation: type .5s 7.5s steps(20, end) forwards;
    }

    .cursor3 {
        -webkit-animation: blink 1s 8.5s 2 forwards;
        -moz-animation: blink 1s 8.5s 2 forwards;
        -o-animation: blink 1s 8.5s 2 forwards;
        animation: blink 1s 8.5s 2 forwards;
    }

    .line4 {
        color: #fff;
        -webkit-animation: type .5s 10.75s steps(20, end) forwards;
        -moz-animation: type .5s 10.75s steps(20, end) forwards;
        -o-animation: type .5s 10.75s steps(20, end) forwards;
        animation: type .5s 10.75s steps(20, end) forwards;
    }

    .cursor4 {
        -webkit-animation: blink 1s 11.5s infinite;
        -moz-animation: blink 1s 8.5s infinite;
        -o-animation: blink 1s 8.5s infinite;
        animation: blink 1s 8.5s infinite;
    }


    @@-webkit-keyframes blink {
        0% {
            opacity: 0;
        }

        40% {
            opacity: 0;
        }

        50% {
            opacity: 1;
        }

        90% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }

    @@-moz-keyframes blink {
        0% {
            opacity: 0;
        }

        40% {
            opacity: 0;
        }

        50% {
            opacity: 1;
        }

        90% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }

    @@-o-keyframes blink {
        0% {
            opacity: 0;
        }

        40% {
            opacity: 0;
        }

        50% {
            opacity: 1;
        }

        90% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }

    @@keyframes blink {
        0% {
            opacity: 0;
        }

        40% {
            opacity: 0;
        }

        50% {
            opacity: 1;
        }

        90% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }

    @@-webkit-keyframes type {
        to {
            width: 100%;
        }
    }

    @@-moz-keyframes type {
        to {
            width: 100%;
        }
    }

    @@-o-keyframes type {
        to {
            width: 100%;
        }
    }

    @@keyframes type {
        to {
            width: 100%;
        }
    }
</style>
